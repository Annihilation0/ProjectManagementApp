// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagementApp.Data;

#nullable disable

namespace ProjectManagementApp.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240331130248_AddData")]
    partial class AddData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("ProjectManagementApp.Models.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyID = 1,
                            CompanyName = "Company A"
                        },
                        new
                        {
                            CompanyID = 2,
                            CompanyName = "Company B"
                        },
                        new
                        {
                            CompanyID = 3,
                            CompanyName = "Company C"
                        },
                        new
                        {
                            CompanyID = 4,
                            CompanyName = "Company D"
                        },
                        new
                        {
                            CompanyID = 5,
                            CompanyName = "Company E"
                        });
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            CompanyID = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 2,
                            CompanyID = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            MiddleName = "Maria"
                        },
                        new
                        {
                            EmployeeID = 3,
                            CompanyID = 3,
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 4,
                            CompanyID = 1,
                            Email = "michael.williams@example.com",
                            FirstName = "Michael",
                            LastName = "Williams",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 5,
                            CompanyID = 2,
                            Email = "sarah.brown@example.com",
                            FirstName = "Sarah",
                            LastName = "Brown",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 6,
                            CompanyID = 3,
                            Email = "david.miller@example.com",
                            FirstName = "David",
                            LastName = "Miller",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 7,
                            CompanyID = 1,
                            Email = "emily.anderson@example.com",
                            FirstName = "Emily",
                            LastName = "Anderson",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 8,
                            CompanyID = 2,
                            Email = "ryan.wilson@example.com",
                            FirstName = "Ryan",
                            LastName = "Wilson",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 9,
                            CompanyID = 3,
                            Email = "jessica.martinez@example.com",
                            FirstName = "Jessica",
                            LastName = "Martinez",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 10,
                            CompanyID = 1,
                            Email = "brian.jones@example.com",
                            FirstName = "Brian",
                            LastName = "Jones",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 11,
                            CompanyID = 2,
                            Email = "laura.thompson@example.com",
                            FirstName = "Laura",
                            LastName = "Thompson",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 12,
                            CompanyID = 3,
                            Email = "kevin.garcia@example.com",
                            FirstName = "Kevin",
                            LastName = "Garcia",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 13,
                            CompanyID = 1,
                            Email = "melissa.roberts@example.com",
                            FirstName = "Melissa",
                            LastName = "Roberts",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 14,
                            CompanyID = 2,
                            Email = "christopher.lee@example.com",
                            FirstName = "Christopher",
                            LastName = "Lee",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 15,
                            CompanyID = 3,
                            Email = "amanda.hernandez@example.com",
                            FirstName = "Amanda",
                            LastName = "Hernandez",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 16,
                            CompanyID = 1,
                            Email = "eric.young@example.com",
                            FirstName = "Eric",
                            LastName = "Young",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 17,
                            CompanyID = 2,
                            Email = "caroline.scott@example.com",
                            FirstName = "Caroline",
                            LastName = "Scott",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 18,
                            CompanyID = 3,
                            Email = "adam.nelson@example.com",
                            FirstName = "Adam",
                            LastName = "Nelson",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 19,
                            CompanyID = 1,
                            Email = "maria.perez@example.com",
                            FirstName = "Maria",
                            LastName = "Perez",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 20,
                            CompanyID = 2,
                            Email = "derek.evans@example.com",
                            FirstName = "Derek",
                            LastName = "Evans",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 21,
                            CompanyID = 3,
                            Email = "nicole.collins@example.com",
                            FirstName = "Nicole",
                            LastName = "Collins",
                            MiddleName = "Smith"
                        },
                        new
                        {
                            EmployeeID = 22,
                            CompanyID = 1,
                            Email = "patrick.wright@example.com",
                            FirstName = "Patrick",
                            LastName = "Wright",
                            MiddleName = "Smith"
                        });
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientCompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ExecutionCompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Priority")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectManagerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProjectID");

                    b.HasIndex("ClientCompanyID");

                    b.HasIndex("ExecutionCompanyID");

                    b.HasIndex("ProjectManagerID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            ClientCompanyID = 4,
                            EndDate = new DateTime(2023, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExecutionCompanyID = 1,
                            Priority = "high",
                            ProjectManagerID = 1,
                            ProjectName = "Project 1",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectID = 2,
                            ClientCompanyID = 4,
                            EndDate = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExecutionCompanyID = 2,
                            Priority = "high",
                            ProjectManagerID = 4,
                            ProjectName = "Project 2",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectID = 3,
                            ClientCompanyID = 5,
                            EndDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExecutionCompanyID = 3,
                            Priority = "low",
                            ProjectManagerID = 6,
                            ProjectName = "Project 3",
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.ProjectEmployee", b =>
                {
                    b.Property<int>("ProjectEmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectEmployeeID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectEmployeeID = 1,
                            EmployeeID = 1,
                            ProjectID = 1,
                            Role = "Project Manager"
                        },
                        new
                        {
                            ProjectEmployeeID = 2,
                            EmployeeID = 2,
                            ProjectID = 1,
                            Role = "Developer"
                        },
                        new
                        {
                            ProjectEmployeeID = 3,
                            EmployeeID = 3,
                            ProjectID = 1,
                            Role = "QA Engineer"
                        },
                        new
                        {
                            ProjectEmployeeID = 4,
                            EmployeeID = 4,
                            ProjectID = 2,
                            Role = "Project Manager"
                        },
                        new
                        {
                            ProjectEmployeeID = 5,
                            EmployeeID = 5,
                            ProjectID = 2,
                            Role = "Designer"
                        },
                        new
                        {
                            ProjectEmployeeID = 6,
                            EmployeeID = 6,
                            ProjectID = 3,
                            Role = "Project Manager"
                        },
                        new
                        {
                            ProjectEmployeeID = 7,
                            EmployeeID = 7,
                            ProjectID = 3,
                            Role = "Developer"
                        },
                        new
                        {
                            ProjectEmployeeID = 8,
                            EmployeeID = 8,
                            ProjectID = 3,
                            Role = "Developer"
                        });
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.Employee", b =>
                {
                    b.HasOne("ProjectManagementApp.Models.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.Project", b =>
                {
                    b.HasOne("ProjectManagementApp.Models.Models.Company", "ClientCompany")
                        .WithMany()
                        .HasForeignKey("ClientCompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagementApp.Models.Models.Company", "ExecutionCompany")
                        .WithMany()
                        .HasForeignKey("ExecutionCompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagementApp.Models.Models.Employee", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCompany");

                    b.Navigation("ExecutionCompany");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.ProjectEmployee", b =>
                {
                    b.HasOne("ProjectManagementApp.Models.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectManagementApp.Models.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectManagementApp.Models.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
